/*
 * 客户端
 * stanley
 * 2018-04-07
 * 发送信息给服务器，将从服务器收到的信息，打印到屏幕上
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/socket.h>
#include <sys/types.h>
#include <arpa/inet.h>

#include "wrap.h"


#define SERV_PORT 8888
#define SERV_IP "127.0.0.1"
#define MAXSIZE 10

int
main(
		int argc,
		const char* argv[]
	)
{
	pid_t pid;
	pid_t wpid;
	int status = 0;
	int j = 0;

	for(j = 0; j < 5; ++j) {
		pid = fork();
		if(0 == pid) {
			break;
		}
	}
	if(0 == pid) {
		int cfd = 0;
		struct sockaddr_in serv_addr;
		char buf[BUFSIZ];
		ssize_t n = 0; 
		int i = 0;

		cfd = Socket(AF_INET, SOCK_STREAM, 0);

		memset(&serv_addr, 0, sizeof(serv_addr));

		serv_addr.sin_family = AF_INET;
		serv_addr.sin_port = htons(SERV_PORT);
		inet_pton(AF_INET, SERV_IP, &serv_addr.sin_addr.s_addr);

		//与服务器建立连接
		Connect(cfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr));

		while(1) {
			for(i = 0; i < MAXSIZE; ++i) {
				buf[i] = 'a';
			}
			buf[i - 1] = '\n';
			Write(cfd, buf, strlen(buf));
			n = Read(cfd, buf, sizeof(buf));
			Write(STDOUT_FILENO, buf, n);
			sleep(5);
		}

		Close(cfd);

		return 9;
	}
	else {
		while((wpid = waitpid(-1, &status, 0)) != -1) {
			if(0 == wpid) {
				continue;
			}
		}
	}

	return 0;
}
